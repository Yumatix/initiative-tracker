{"ast":null,"code":"// Class designed to load and store different status effect templates\n// As well as helping to easily create new statuses from those templates\nimport Status from \"./Status\";\nimport defaultStatusesJSON from \"./../assets/defaultStatuses.json\";\n\nclass StatusManager {\n  constructor() {\n    this.StatusTemplates = [];\n  } // Function to load up some random, testing statuses. \n\n\n  loadTestStatuses() {\n    this.StatusTemplates.push(new Status(0));\n    this.StatusTemplates.push(new Status(1));\n    this.StatusTemplates.push(new Status(2));\n    this.StatusTemplates.push(new Status(3));\n  }\n\n  loadDefaultStatuses(iconDirectory) {\n    defaultStatusesJSON.forEach(i => {\n      let iconPath = \"\";\n      iconPath = iconDirectory + i.icon;\n      this.StatusTemplates.push(new Status(i.id, i.name, i.desc, iconPath));\n    });\n  }\n\n  createStatus(templateId) {\n    return new Status(this.StatusTemplates[templateId].id);\n  }\n\n}\n\nexport default StatusManager;","map":{"version":3,"names":["Status","defaultStatusesJSON","StatusManager","constructor","StatusTemplates","loadTestStatuses","push","loadDefaultStatuses","iconDirectory","forEach","i","iconPath","icon","id","name","desc","createStatus","templateId"],"sources":["/home/kristin/Documents/dev/initiative-tracker/src/StatusManager.js"],"sourcesContent":["// Class designed to load and store different status effect templates\n// As well as helping to easily create new statuses from those templates\n\nimport Status from \"./Status\";\nimport defaultStatusesJSON from \"./../assets/defaultStatuses.json\";\n\nclass StatusManager {\n    constructor(){\n        this.StatusTemplates = [];\n    }\n\n\n    // Function to load up some random, testing statuses. \n    loadTestStatuses() {\n        this.StatusTemplates.push(new Status(0));\n        this.StatusTemplates.push(new Status(1));\n        this.StatusTemplates.push(new Status(2));\n        this.StatusTemplates.push(new Status(3));\n    }\n\n    loadDefaultStatuses(iconDirectory) {\n        defaultStatusesJSON.forEach(i => {\n            let iconPath = \"\";\n            iconPath = iconDirectory + i.icon;\n            this.StatusTemplates.push(new Status(i.id, i.name, i.desc, iconPath));\n        });\n    }\n\n    createStatus(templateId) { \n        return new Status(\n            this.StatusTemplates[templateId].id\n        );\n    }\n}\n\nexport default StatusManager"],"mappings":"AAAA;AACA;AAEA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;;AAEA,MAAMC,aAAN,CAAoB;EAChBC,WAAW,GAAE;IACT,KAAKC,eAAL,GAAuB,EAAvB;EACH,CAHe,CAMhB;;;EACAC,gBAAgB,GAAG;IACf,KAAKD,eAAL,CAAqBE,IAArB,CAA0B,IAAIN,MAAJ,CAAW,CAAX,CAA1B;IACA,KAAKI,eAAL,CAAqBE,IAArB,CAA0B,IAAIN,MAAJ,CAAW,CAAX,CAA1B;IACA,KAAKI,eAAL,CAAqBE,IAArB,CAA0B,IAAIN,MAAJ,CAAW,CAAX,CAA1B;IACA,KAAKI,eAAL,CAAqBE,IAArB,CAA0B,IAAIN,MAAJ,CAAW,CAAX,CAA1B;EACH;;EAEDO,mBAAmB,CAACC,aAAD,EAAgB;IAC/BP,mBAAmB,CAACQ,OAApB,CAA4BC,CAAC,IAAI;MAC7B,IAAIC,QAAQ,GAAG,EAAf;MACAA,QAAQ,GAAGH,aAAa,GAAGE,CAAC,CAACE,IAA7B;MACA,KAAKR,eAAL,CAAqBE,IAArB,CAA0B,IAAIN,MAAJ,CAAWU,CAAC,CAACG,EAAb,EAAiBH,CAAC,CAACI,IAAnB,EAAyBJ,CAAC,CAACK,IAA3B,EAAiCJ,QAAjC,CAA1B;IACH,CAJD;EAKH;;EAEDK,YAAY,CAACC,UAAD,EAAa;IACrB,OAAO,IAAIjB,MAAJ,CACH,KAAKI,eAAL,CAAqBa,UAArB,EAAiCJ,EAD9B,CAAP;EAGH;;AA1Be;;AA6BpB,eAAeX,aAAf"},"metadata":{},"sourceType":"module"}