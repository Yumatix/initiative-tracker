{"ast":null,"code":"// Class designed to load and store different status effect templates\n// As well as helping to easily create new statuses from those templates\nimport Status from \"./Status\";\nimport defaultStatusesJSON from \"./defaultStatuses.json\";\n\nclass StatusManager {\n  constructor() {\n    this.loadDefaultStatuses = iconDirectory => {\n      defaultStatusesJSON.forEach(i => {\n        let iconPath = \"\";\n        iconPath = iconDirectory + i.icon;\n        console.log(\"Loading icon:  \" + iconPath);\n        this.StatusTemplates.push(new Status(i.id, i.name, i.desc, iconPath));\n      });\n    };\n\n    this.StatusTemplates = [];\n  } // Function to load up some random, testing statuses. \n\n\n  loadTestStatuses() {\n    this.StatusTemplates.push(new Status(0));\n    this.StatusTemplates.push(new Status(1));\n    this.StatusTemplates.push(new Status(2));\n    this.StatusTemplates.push(new Status(3));\n  }\n\n  createStatus(templateId) {\n    return new Status(this.StatusTemplates[templateId].id);\n  }\n\n}\n\nexport default StatusManager;","map":{"version":3,"names":["Status","defaultStatusesJSON","StatusManager","constructor","loadDefaultStatuses","iconDirectory","forEach","i","iconPath","icon","console","log","StatusTemplates","push","id","name","desc","loadTestStatuses","createStatus","templateId"],"sources":["/home/kristin/Documents/dev/initiative-tracker/src/StatusManager.js"],"sourcesContent":["// Class designed to load and store different status effect templates\n// As well as helping to easily create new statuses from those templates\n\nimport Status from \"./Status\";\nimport defaultStatusesJSON from \"./defaultStatuses.json\";\n\nclass StatusManager {\n    constructor(){\n        this.StatusTemplates = [];\n    }\n\n\n    // Function to load up some random, testing statuses. \n    loadTestStatuses() {\n        this.StatusTemplates.push(new Status(0));\n        this.StatusTemplates.push(new Status(1));\n        this.StatusTemplates.push(new Status(2));\n        this.StatusTemplates.push(new Status(3));\n    }\n\n    loadDefaultStatuses = (iconDirectory) => {\n        defaultStatusesJSON.forEach(i => {\n            let iconPath = \"\";\n            iconPath = iconDirectory + i.icon;\n            console.log(\"Loading icon:  \" + iconPath);\n            this.StatusTemplates.push(new Status(i.id, i.name, i.desc, iconPath));\n        });\n    }\n\n    createStatus(templateId) { \n        return new Status(\n            this.StatusTemplates[templateId].id\n        );\n    }\n}\n\nexport default StatusManager"],"mappings":"AAAA;AACA;AAEA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;;AAEA,MAAMC,aAAN,CAAoB;EAChBC,WAAW,GAAE;IAAA,KAabC,mBAba,GAaUC,aAAD,IAAmB;MACrCJ,mBAAmB,CAACK,OAApB,CAA4BC,CAAC,IAAI;QAC7B,IAAIC,QAAQ,GAAG,EAAf;QACAA,QAAQ,GAAGH,aAAa,GAAGE,CAAC,CAACE,IAA7B;QACAC,OAAO,CAACC,GAAR,CAAY,oBAAoBH,QAAhC;QACA,KAAKI,eAAL,CAAqBC,IAArB,CAA0B,IAAIb,MAAJ,CAAWO,CAAC,CAACO,EAAb,EAAiBP,CAAC,CAACQ,IAAnB,EAAyBR,CAAC,CAACS,IAA3B,EAAiCR,QAAjC,CAA1B;MACH,CALD;IAMH,CApBY;;IACT,KAAKI,eAAL,GAAuB,EAAvB;EACH,CAHe,CAMhB;;;EACAK,gBAAgB,GAAG;IACf,KAAKL,eAAL,CAAqBC,IAArB,CAA0B,IAAIb,MAAJ,CAAW,CAAX,CAA1B;IACA,KAAKY,eAAL,CAAqBC,IAArB,CAA0B,IAAIb,MAAJ,CAAW,CAAX,CAA1B;IACA,KAAKY,eAAL,CAAqBC,IAArB,CAA0B,IAAIb,MAAJ,CAAW,CAAX,CAA1B;IACA,KAAKY,eAAL,CAAqBC,IAArB,CAA0B,IAAIb,MAAJ,CAAW,CAAX,CAA1B;EACH;;EAWDkB,YAAY,CAACC,UAAD,EAAa;IACrB,OAAO,IAAInB,MAAJ,CACH,KAAKY,eAAL,CAAqBO,UAArB,EAAiCL,EAD9B,CAAP;EAGH;;AA3Be;;AA8BpB,eAAeZ,aAAf"},"metadata":{},"sourceType":"module"}