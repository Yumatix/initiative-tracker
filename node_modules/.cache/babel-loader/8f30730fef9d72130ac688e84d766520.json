{"ast":null,"code":"class EncounterMember {\n  constructor(memberIndex, name, initiative) {\n    this.addStatus = (status, listId, timeout) => {\n      if ([0, 1, 2].includes(listId)) {\n        this.statuses[listId].push({\n          \"status\": status,\n          \"timeout\": timeout\n        });\n      } else {\n        console.log(\"Invalid ID: \" + listId);\n      }\n    };\n\n    this.onTurnEnd = () => {\n      alert(this.name + \"My turn has ended!\");\n    };\n\n    this.removeStatus = (statusId, listId) => {\n      if ([0, 1, 2].includes(listId)) {\n        let removeIndex = -1;\n\n        for (let i = 0; i < this.statuses[listId].length; i++) {\n          if (this.statuses[listId][i].status.id == statusId) {\n            removeIndex = i;\n            break;\n          }\n        }\n\n        this.statuses[listId].splice(removeIndex, 1);\n      } else {\n        console.log(\"Invalid ID: \" + listId);\n      }\n    };\n\n    this.index = memberIndex;\n    this.name = name || \"\";\n    this.initiative = initiative || null;\n    this.statuses = [[], [], []];\n  }\n\n}\n\nexport default EncounterMember;","map":{"version":3,"names":["EncounterMember","constructor","memberIndex","name","initiative","addStatus","status","listId","timeout","includes","statuses","push","console","log","onTurnEnd","alert","removeStatus","statusId","removeIndex","i","length","id","splice","index"],"sources":["/home/kristin/Documents/dev/initiative-tracker/src/EnounterMember.js"],"sourcesContent":["class EncounterMember{\n    constructor(memberIndex, name, initiative){\n        this.index = memberIndex;\n        this.name = name || \"\";\n        this.initiative = initiative || null;\n        this.statuses = [[], [], []];\n    };\n\n    addStatus = (status, listId, timeout) => {\n        if ([0,1,2].includes(listId)){\n            this.statuses[listId].push({\n                \"status\" : status,\n                \"timeout\" : timeout\n            });\n        } else {\n            console.log(\"Invalid ID: \" + listId)\n        }\n        \n    }\n\n    onTurnEnd = () => {\n        alert(this.name + \"My turn has ended!\");\n    }\n\n    removeStatus = (statusId, listId) => {\n        if ([0,1,2].includes(listId)){\n            let removeIndex = -1;\n            for (let i = 0; i < this.statuses[listId].length; i++){\n                if(this.statuses[listId][i].status.id == statusId){removeIndex=i; break;}\n            }\n            this.statuses[listId].splice(removeIndex, 1);\n        } else {\n            console.log(\"Invalid ID: \" + listId)\n        }\n    }\n}\n\n\nexport default EncounterMember;"],"mappings":"AAAA,MAAMA,eAAN,CAAqB;EACjBC,WAAW,CAACC,WAAD,EAAcC,IAAd,EAAoBC,UAApB,EAA+B;IAAA,KAO1CC,SAP0C,GAO9B,CAACC,MAAD,EAASC,MAAT,EAAiBC,OAAjB,KAA6B;MACrC,IAAI,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAQC,QAAR,CAAiBF,MAAjB,CAAJ,EAA6B;QACzB,KAAKG,QAAL,CAAcH,MAAd,EAAsBI,IAAtB,CAA2B;UACvB,UAAWL,MADY;UAEvB,WAAYE;QAFW,CAA3B;MAIH,CALD,MAKO;QACHI,OAAO,CAACC,GAAR,CAAY,iBAAiBN,MAA7B;MACH;IAEJ,CAjByC;;IAAA,KAmB1CO,SAnB0C,GAmB9B,MAAM;MACdC,KAAK,CAAC,KAAKZ,IAAL,GAAY,oBAAb,CAAL;IACH,CArByC;;IAAA,KAuB1Ca,YAvB0C,GAuB3B,CAACC,QAAD,EAAWV,MAAX,KAAsB;MACjC,IAAI,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAQE,QAAR,CAAiBF,MAAjB,CAAJ,EAA6B;QACzB,IAAIW,WAAW,GAAG,CAAC,CAAnB;;QACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKT,QAAL,CAAcH,MAAd,EAAsBa,MAA1C,EAAkDD,CAAC,EAAnD,EAAsD;UAClD,IAAG,KAAKT,QAAL,CAAcH,MAAd,EAAsBY,CAAtB,EAAyBb,MAAzB,CAAgCe,EAAhC,IAAsCJ,QAAzC,EAAkD;YAACC,WAAW,GAACC,CAAZ;YAAe;UAAO;QAC5E;;QACD,KAAKT,QAAL,CAAcH,MAAd,EAAsBe,MAAtB,CAA6BJ,WAA7B,EAA0C,CAA1C;MACH,CAND,MAMO;QACHN,OAAO,CAACC,GAAR,CAAY,iBAAiBN,MAA7B;MACH;IACJ,CAjCyC;;IACtC,KAAKgB,KAAL,GAAarB,WAAb;IACA,KAAKC,IAAL,GAAYA,IAAI,IAAI,EAApB;IACA,KAAKC,UAAL,GAAkBA,UAAU,IAAI,IAAhC;IACA,KAAKM,QAAL,GAAgB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAhB;EACH;;AANgB;;AAsCrB,eAAeV,eAAf"},"metadata":{},"sourceType":"module"}