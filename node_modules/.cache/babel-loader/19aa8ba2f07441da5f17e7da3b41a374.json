{"ast":null,"code":"var _jsxFileName = \"/home/kristin/Documents/dev/5eInitiative/initiative-tracker/src/TimelineView.js\";\nimport React from \"react\";\nimport TimelineCard from \"./TimelineCard\";\nimport styles from \"./CSS/TimelineView.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TimelineView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInitiativeChange = (newInitiative, memberIndex) => {\n      this.props.onInitiativeChange(newInitiative, memberIndex);\n    };\n\n    this.renderInitiativeOrder = list => {\n      // Shift member list into initiative list, discarding anyone without an initiative\n      let tempInitiativeOrder = [];\n      list.forEach(i => {\n        if (i.initiative != null) {\n          tempInitiativeOrder.push(i);\n        }\n      }); // Sort initiative order\n      // Note: multiply initiative by 1 to force JS to convert them to numbers during the comparison\n\n      tempInitiativeOrder.sort((a, b) => a.initiative * 1 < b.initiative * 1 ? 1 : -1);\n      let requireRefresh = false;\n\n      if (this.state.initiativeOrder.length !== tempInitiativeOrder.length) {\n        requireRefresh = true;\n      } else {\n        for (let i = 0; i < tempInitiativeOrder.length; i++) {\n          if (this.state.initiativeOrder[i] !== tempInitiativeOrder[i]) {\n            requireRefresh = true;\n            break;\n          }\n        }\n      }\n\n      if (requireRefresh) {\n        this.setState({\n          initiativeOrder: tempInitiativeOrder\n        });\n      } // Render list into TimelineCard React Components\n\n\n      let toRender = [];\n\n      for (let i = 0; i < this.state.iterations; i++) {\n        toRender.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.Separator\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 27\n        }, this));\n        toRender.push(this.state.initiativeOrder.map(i => {\n          return /*#__PURE__*/_jsxDEV(TimelineCard, {\n            member: i,\n            onChange: this.handleInitiativeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 24\n          }, this);\n        }));\n      }\n\n      return toRender;\n    };\n\n    this.toggleActive = () => {\n      let newState = !this.state.gameActive;\n      this.setState({\n        gameActive: newState\n      }); // Toggled game on\n\n      if (this.state.gameActive) {\n        // Try to generate a new round\n        let newRound = this.generateRound(); // If the new round is still empty (nobody has any initiative scores), turn the game back off\n\n        if (newRound.length > 0) {\n          this.setState({\n            currentRound: newRound\n          });\n        } else {\n          this.setState({\n            gameActive: false\n          });\n        }\n      } // Toggled game off\n      else {\n        this.setState({\n          currentRound: []\n        });\n      }\n    };\n\n    this.state = {\n      iterations: 2,\n      initiativeOrder: [],\n      currentRound: [],\n      gameActive: false\n    };\n    this.handleIterationsChange = this.handleIterationsChange.bind(this);\n  }\n\n  render() {\n    let activeBtnClass = this.state.gameActive ? styles.GameActiveButton : styles.GameInactiveButton;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.TimelineViewContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.TimelineToolbar,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.toggleActive,\n          className: activeBtnClass,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.IterationsContainer,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.IterationsField,\n            type: \"number\",\n            value: this.state.iterations,\n            onChange: this.handleIterationsChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.TimelineMain,\n        children: [this.renderCurrentRound(), this.renderInitiativeOrder(this.props.memberList)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.TimelineCurrent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleIterationsChange(event) {\n    this.setState({\n      iterations: event.target.value\n    });\n  }\n\n  renderCurrentRound() {\n    let toRender = [];\n\n    if (this.state.currentRound.length > 0) {\n      toRender.push(this.state.currentRound.map(i => {\n        return /*#__PURE__*/_jsxDEV(TimelineCard, {\n          member: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 24\n        }, this);\n      }));\n    }\n\n    return toRender;\n  }\n\n  generateRound() {\n    let newRound = [];\n    this.state.initiativeOrder.forEach(i => {\n      newRound.push(i);\n    });\n    return newRound;\n  }\n\n}\n\nexport default TimelineView;","map":{"version":3,"names":["React","TimelineCard","styles","TimelineView","Component","constructor","props","handleInitiativeChange","newInitiative","memberIndex","onInitiativeChange","renderInitiativeOrder","list","tempInitiativeOrder","forEach","i","initiative","push","sort","a","b","requireRefresh","state","initiativeOrder","length","setState","toRender","iterations","Separator","map","toggleActive","newState","gameActive","newRound","generateRound","currentRound","handleIterationsChange","bind","render","activeBtnClass","GameActiveButton","GameInactiveButton","TimelineViewContainer","TimelineToolbar","IterationsContainer","IterationsField","TimelineMain","renderCurrentRound","memberList","TimelineCurrent","event","target","value"],"sources":["/home/kristin/Documents/dev/5eInitiative/initiative-tracker/src/TimelineView.js"],"sourcesContent":["import React from \"react\"\nimport TimelineCard from \"./TimelineCard\"\nimport styles from \"./CSS/TimelineView.module.css\"\n\nclass TimelineView extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            iterations: 2,\n            initiativeOrder: [],\n            currentRound: [],\n            gameActive: false\n        };\n        this.handleIterationsChange = this.handleIterationsChange.bind(this);\n    }\n\n\n\n    render(){\n        let activeBtnClass = this.state.gameActive ? styles.GameActiveButton : styles.GameInactiveButton;\n\n        return(\n            <div className={styles.TimelineViewContainer}>\n                <div className={styles.TimelineToolbar}>\n                    <button type=\"button\" onClick={this.toggleActive} className={activeBtnClass}>\n                        Start\n                    </button>\n                    <div className={styles.IterationsContainer}>\n                        <input className={styles.IterationsField} type=\"number\" value={this.state.iterations} onChange={this.handleIterationsChange}/>\n                    </div>\n                </div>\n\n                <div className={styles.TimelineMain}>\n                    {this.renderCurrentRound()}\n                    {this.renderInitiativeOrder(this.props.memberList)}\n                </div>\n                \n                <div className={styles.TimelineCurrent}>\n                    \n                </div>\n\n            </div>\n            \n        )\n    }\n\n\n    handleIterationsChange(event){\n        this.setState({iterations: event.target.value});\n    }\n\n\n\n    handleInitiativeChange = (newInitiative, memberIndex) => {\n        this.props.onInitiativeChange(newInitiative, memberIndex);\n    }\n\n\n    renderCurrentRound() {\n        let toRender = [];\n        \n        if(this.state.currentRound.length > 0){\n            toRender.push(this.state.currentRound.map(i => {\n                return <TimelineCard member={i}/>\n            }));\n        }\n\n        return toRender;\n    }\n\n\n    renderInitiativeOrder = list => {\n        // Shift member list into initiative list, discarding anyone without an initiative\n        let tempInitiativeOrder = [];\n        list.forEach(i => {\n            if (i.initiative != null) {tempInitiativeOrder.push(i);}\n        })\n\n        // Sort initiative order\n        // Note: multiply initiative by 1 to force JS to convert them to numbers during the comparison\n        tempInitiativeOrder.sort((a, b) => (a.initiative*1 < b.initiative*1) ? 1 : -1); \n        \n        let requireRefresh = false;\n        if (this.state.initiativeOrder.length !== tempInitiativeOrder.length) {requireRefresh = true;}\n        else {\n            for (let i = 0; i < tempInitiativeOrder.length; i++){\n                if (this.state.initiativeOrder[i] !== tempInitiativeOrder[i]){\n                    requireRefresh = true;\n                    break;\n                }\n            }\n        }\n        if (requireRefresh){\n            this.setState({initiativeOrder : tempInitiativeOrder});\n        }\n\n        // Render list into TimelineCard React Components\n        let toRender = []\n\n        for (let i = 0; i < this.state.iterations; i++) {\n            toRender.push(<div className={styles.Separator}></div>)\n            toRender.push(this.state.initiativeOrder.map(i => {\n                return <TimelineCard member={i} onChange={this.handleInitiativeChange}/>\n            }))\n        }\n\n        return toRender;\n    }\n\n    generateRound(){\n        let newRound = [];\n\n        this.state.initiativeOrder.forEach(i => {\n            newRound.push(i);\n        })\n\n        return newRound;\n    }\n\n    toggleActive = () => {\n        let newState = !this.state.gameActive;\n        this.setState({gameActive: newState});\n\n        \n        // Toggled game on\n        if (this.state.gameActive){\n            // Try to generate a new round\n            let newRound = this.generateRound();\n\n            // If the new round is still empty (nobody has any initiative scores), turn the game back off\n            if (newRound.length > 0){\n                this.setState({currentRound: newRound});\n            } else {\n                this.setState({gameActive: false});\n            }\n        }\n\n        // Toggled game off\n        else {\n            this.setState({currentRound: []});\n        }\n    }\n}\n\nexport default TimelineView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}